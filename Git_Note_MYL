



 ++++++
 2023-06-17 To back to use Git:
  1,2 平时也不会用。
  1: to 创建一个版本库非常简单，首先，选择一个合适的地方，创建一个空目录
  2: 通过git init命令把这个目录变成Git可以管理的仓库：git init

   重新开始：
   1: 添加
    git add file1.txt
    Git commit -m "comments"

   2: 检查状态：
     Git status
    
     查看区别：
     Git diff 

  3: git log. 查看都有哪些修改变化
     （ git log --pretty=oneline  　简化输出）

  4； 回退到上一个版本
  git reset --hard HEAD^
  上一个版本就是HEAD^，上上一个版本就是HEAD^^，当然往上100个版本写100个^比较容易数不过来，所以写成HEAD~100
 


  git reset --hard 3628164 （ comment id)

   5: git reflog 
   Git提供了一个命令git reflog用来记录你的每一次命令：

  6: 提交后，用git diff HEAD -- readme.txt命令可以查看工作区和版本库里面最新版本的区别：

  7:
   Git会告诉你，git checkout -- file可以丢弃工作区的修改： ( 没有add,也没有 commit的时候）
   use "git checkout -- <file>..." to discard changes in working directory
   git checkout -- file命令中的--很重要，没有--，就变成了“切换到另一个分支”的命令

 8: （ 已经add,还没从commit时）
  用命令git reset HEAD file可以把暂存区的修改撤销掉（unstage），重新放回工作区：

(use "git reset HEAD <file>..." to unstage)
  git reset命令既可以回退版本，也可以把暂存区的修改回退到工作区。当我们用HEAD时，表示最新的版本。

 9： 删除文件：
    9.1: rm file (物理删除）
    9.2: 确实想删除：  git rm删掉；并且git commit
         反悔了，另一种情况是删错了，因为版本库里还有呢，所以可以很轻松地把误删的文件恢复到最新版本：
         git checkout -- test.txt
        （git checkout其实是用版本库里的版本替换工作区的版本，无论工作区是修改还是删除，都可以“一键还原”。）



10: 远程仓库：
        1）请自行注册GitHub账号
	2）第1步：创建SSH Key。在用户主目录下，看看有没有.ssh目录，如果有，再看看这个目录下有没有id_rsa和id_rsa.pub这两个文件
           如果没有，创建： $ ssh-keygen -t rsa -C "youremail@example.com"
            在用户主目录里找到.ssh目录，里面有id_rsa和id_rsa.pub两个文件，这两个就是SSH Key的秘钥对，id_rsa是私钥，不能泄露出去，id_rsa.pub是公钥，可以放心地告诉任何人。
	3) 登陆GitHub，打开“Account settings”，“SSH Keys”页面：然后，点“Add SSH Key”，填上任意Title，在Key文本框里粘贴id_rsa.pub文件的内容：点“Add Key.

11: 添加远程库
	1）登陆GitHub，然后，在右上角找到“Create a new repo”按钮，创建一个新的仓库
	2）在Repository name填入learngit，其他保持默认设置，点击“Create repository”按钮
	3）在本地的learngit仓库下运行命令
          git remote add origin git@github.com:YOURGITHUBNAME/learngit.git

        (More needs to be checked.....)

12: 本地库的所有内容推送到远程库上：
	git push -u origin master

        ( git push origin master)
	要关联一个远程库，使用命令git remote add origin git@server-name:path/repo-name.git；
       关联后，使用命令git push -u origin master第一次推送master分支的所有内容；
       此后，每次本地提交后，只要有必要，就可以使用命令git push origin master推送最新修改；

13: 克隆
    
 	git clone git@github.com:MCIN2018/2022-Machine-Learning-Specialization

14; 创建分支，然后切换到分支
	git checkout -b MC_b1
	查看当前分支：git branch



mc-Sat Jun 17-14:57$ git push origin master
The authenticity of host 'github.com (20.205.243.166)' can't be established.
ECDSA key fingerprint is SHA256:p2QAMXNIC1TJYWeIOttrVc98/R1BUFWu3/LiyKgUfQM.
Are you sure you want to continue connecting (yes/no)? 
Please type 'yes' or 'no': yes
Warning: Permanently added 'github.com,20.205.243.166' (ECDSA) to the list of known hosts.
git@github.com: Permission denied (publickey).
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.

@       WARNING: POSSIBLE DNS SPOOFING DETECTED!  




mc-Sat Jun 17-15:06$ git push origin master
Counting objects: 7, done.
Delta compression using up to 4 threads.
Compressing objects: 100% (7/7), done.
Writing objects: 100% (7/7), 1.65 KiB | 1.65 MiB/s, done.
Total 7 (delta 2), reused 0 (delta 0)
remote: Resolving deltas: 100% (2/2), completed with 1 local object.
To github.com:MCIN2018/hello-world
   62d5e16..8906eb0  master -> master


打开known_hosts文件，删除其中的内容，或者删除该文件（这一做法本人未使用，不敢确定），然后在git上执行命令：

ssh -keygen -t rsa -C "account email"



++++++++++++++++++++++++

  715  git add ./*
  716  git status
  717  git commit -m "2020-02-11"
  718  git push origin



++++++++++++++++++++++++++++++++++++++++

: a file was deleted on GitHub. I deleted also on my local.  Conflict happened when I git commit. 

Then:

git pull origin

Solved!

:The detailed :
  871  git pull origin
  872  git status
  873  git add .
  874  git status
  875  git commit -m "change formate of BLE_Note"
  876  git push origin master


+++++++++++

To delete a file which has been "git add":

git rm -f BLE_record


++++++++++++++++


MCdeMacBook-Pro:hello-world mc$ git status
On branch master
Your branch is up to date with 'origin/master'.

Changes not staged for commit:
  (use "git add/rm <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

	deleted:    README.md

To Recovery this file:

git checkout -- README.md

This file is then recovered:

-rw-r--r--  1 mc  staff   77 Jul 17 15:58 README.md

++++++++++++++++++++++++++
20190717:

git status
git add .
git commit . -m "20190716"
git push origin perl_4_example


=====================



++++++++++++++++++++++++++++++++++++++++


git checkout -b perl_4_example

Then create scripts at this branch, then, push this new branch to Github.

git push -u origin perl_4_example 


=======================

1: Guthub:https://github.com

 MCIN2018 : GitHub name 
 myl2012@hotmail.com/T12…..a

1.1. Create Github account and first repository hello-world

Under your account , find .ssh folder. ( on your computer. Not on Github)

To check if id_rsa and id_rsa.pub , if they don’t exist, to create them:

ssh-keygen -t rsa

Add public to Github:setting->adding ssh key.  ( this is on Github)


====: to clone the remote repository hello-world. ( it is different with the below one.  The folder was not created on Github.  The below one, the folder was created on Github)

 Git clone git@github.com:MCIN2018/hello-world

===: create repository codes and connect it to local repository codes. 

git remote add origin git@github.com:MCIN2018/codes
   : ssh:git@github.com:MCIN2018/codes.git
     Https:https://github.com/MCIN2018/codes.git



=======
To add a new repositories : ( this is not a good example.  The folder on Github shouldn't be created manually )

1;To add a repository at Github: resource ( private)

2: TO Clone the remote repository resource to /users/mc/resource

  

Git clone git@github.com:MCIN2018/resource. : This will become /users/mc/resource/resource!!!!  Be careful, to make sure the structure of your folders. 


 After this operation, go to 3:

3: ( this doesn't need since the resource repository has been created on Gitghu)


git remote add origin git@github.com:MCIN2018/resource

+++ output: 
MCdeMacBook-Pro:resource mc$ pwd
/users/mc/resource/resource
MCdeMacBook-Pro:resource mc$ git remote add origin git@github.com:MCIN2018/resource
fatal: remote origin already exists.

4: 
MCdeMacBook-Pro:resource mc$ git push -u origin master

Warning: Permanently added the RSA host key for IP address '192.30.253.112' to the list of known hosts.
Branch 'master' set up to track remote branch 'master' from 'origin'.
Everything up-to-date



5:
  559  git diff
  561  git add .
  563  git status .
  564  git commit -m "20190228_test1"
  565  git status
  566  git push origin master
  568  git status .





============ files all lost, to recovery.

MCdeMacBook-Pro:codes mc$ git status 
On branch perl_4_example
Your branch is up to date with 'origin/perl_4_example'.

Changes not staged for commit:
  (use "git add/rm <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

	deleted:    perl/10_file.pl
	deleted:    perl/11_exercise_1.pl
	deleted:    perl/11_exercise_2.pl
	deleted:    perl/11_exercise_3.pl
	deleted:    perl/11_sub.pl
	deleted:    perl/12_exercise.pl
	deleted:    perl/13_reference.pl
	deleted:    perl/5_exercise_2.pl
	deleted:    perl/5_exercise_3.pl
	deleted:    perl/5_exercise_4.pl
	deleted:    perl/5_exercise_5.pl
	deleted:    perl/5_other_hash.pl
	deleted:    perl/5_what_is_in_a_name.pl
	deleted:    perl/6_whereisoperator.pl
	deleted:    perl/7_if_only.pl
	deleted:    perl/8_exercise.pl
	deleted:    perl/8_re.pl
	deleted:    perl/9_2_re.pl
	deleted:    perl/9_3_re.pl
	deleted:    perl/9_exercise.pl
	deleted:    perl/9_re.pl
	deleted:    perl/generate_xml.pl
	deleted:    perl/suse.sh
	deleted:    perl/test_result.txt
	deleted:    shell/Script.sh
	deleted:    shell/create_xml.sh
	deleted:    shell/exercise_1.sh
	deleted:    shell/exercise_2.sh
	deleted:    shell/exercise_3.sh
	modified:   shell/out
	modified:   shell/out.cooy
	deleted:    shell/out.xml
	deleted:    shell/result.txt
	deleted:    shell/test_result.txt
	deleted:    shell/test_result.xml
	deleted:    shell/ts_xml.sh

Untracked files:
  (use "git add <file>..." to include in what will be committed)

	.DS_Store
	perl/.DS_Store
	perl/12_register
	perl/failed
	shell/.DS_Store
	shell/file
	shell/interview_scripts/

no changes added to commit (use "git add" and/or "git commit -a")


: git checkout -- perl/10_file.pl
MCdeMacBook-Pro:codes mc$ ls -l perl/10_file.pl
-rwxr-xr-x  1 mc  staff  1028 Feb 28 18:54 perl/10_file.pl

: then , the first file is recovered 



